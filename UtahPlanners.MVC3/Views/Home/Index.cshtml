@model IndexModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutNoLeftNav.cshtml";
}

@section Head
{
<script type="text/javascript" src="http://code.jquery.com/jquery-1.4.2.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $("h2.trigger").click(function (event) {
            event.preventDefault();
            $(this).toggleClass("active").next().slideToggle("slow");
        });

        // Sorting the city column
        $("#cityColumn").click(function (event) {
            event.preventDefault();
            $("#columnField").val('City');
            $("form").submit();
        });
    });
</script>
}

@using (Html.BeginForm("Index", "Home", FormMethod.Post))
{ 
<h2 class="trigger"><a href="#">Index Filter</a></h2>
<div class="toggle_container" style="display: none;">
    <div class="block">
    

    <div class="searchLeft">
        <h3 style="margin-left:50px;">Property Details:</h3>
        
        <span class="searchLabel">Property Number:</span>
        @Html.TextBoxFor(m => m.Filter.PropertyId, new { @class = "newwidth" })
        
        <span class="searchLabel">City:</span>
        @Html.TextBoxFor(m => m.Filter.City, new { @class = "newwidth" })

        <span class="searchLabel">Property Type:</span>
        <select class="newwidth">
            <option selected="selected"></option>
        </select><br />
        
        <span class="searchLabel">Density Between:</span>
        @Html.TextBoxFor(m => m.Filter.DensityRange.LowValue, new { @class = "smallwidth" }) and 
        @Html.TextBoxFor(m => m.Filter.DensityRange.HighValue, new { @class = "smallwidth" })<br />
        
        <span class="searchLabel">Area Between:</span>
        @Html.TextBoxFor(m => m.Filter.AreaRange.LowValue, new { @class = "smallwidth" }) and 
        @Html.TextBoxFor(m => m.Filter.AreaRange.HighValue, new { @class = "smallwidth" })<br />
        
        <span class="searchLabel">Units Between:</span>
        @Html.TextBoxFor(m => m.Filter.UnitRange.LowValue, new { @class = "smallwidth" }) and 
        @Html.TextBoxFor(m => m.Filter.UnitRange.HighValue, new { @class = "smallwidth" })<br />
        
        <span class="searchLabel">Street Type:</span>
        <select class="newwidth">
            <option selected="selected"></option>
        </select><br />
        
        <span class="searchLabel">Year Built Between:</span>
        @Html.TextBoxFor(m => m.Filter.YearBuiltRange.LowValue, new { @class = "smallwidth" }) and 
        @Html.TextBoxFor(m => m.Filter.YearBuiltRange.HighValue, new { @class = "smallwidth" })<br />
        
        <span class="searchLabel">Socio Econ:</span>
        <select class="newwidth">
            <option selected="selected"></option>
        </select><br /><br /><br />
    </div>
    
    <div class="searchRight">
        <h3>Rating Details:</h3>
        <span class="searchLabel">Overall Score Between:</span> 
        @Html.TextBoxFor(m => m.Filter.ScoreRange.LowValue, new { @class = "smallwidth" }) and 
        @Html.TextBoxFor(m => m.Filter.ScoreRange.HighValue, new { @class = "smallwidth" })<br />
        
        <span class="searchLabel">Street Safety:</span> 
        <select class="newwidth">
            <option selected="selected"></option>
        </select><br />
        
        <span class="searchLabel">Building Enclosure:</span> 
        <select class="newwidth">
            <option selected="selected"></option>
        </select><br />
        
        <span class="searchLabel">Common Areas:</span> 
        <select class="newwidth">
            <option selected="selected"></option>
        </select><br />
        
        <span class="searchLabel">Street Connectivity:</span> 
        <select class="newwidth">
            <option selected="selected"></option>
        </select><br />
        
        <span class="searchLabel">Street Walkability:</span> 
        <select class="newwidth">
            <option selected="selected"></option>
        </select><br />
        
        <span class="searchLabel">Walkscore Between:</span> 
        @Html.TextBoxFor(m => m.Filter.WalkscoreRange.LowValue, new { @class = "smallwidth" }) and 
        @Html.TextBoxFor(m => m.Filter.WalkscoreRange.HighValue, new { @class = "smallwidth" })<br />
        
        <span class="searchLabel">Neighborhood Condition:</span> 
        <select class="newwidth">
            <option selected="selected"></option>
        </select><br />
        
        <span class="searchLabel">250 SF Between:</span> 
        @Html.TextBoxFor(m => m.Filter.TwoFiftySingleFamilyRange.LowValue, new { @class = "smallwidth" }) and 
        @Html.TextBoxFor(m => m.Filter.TwoFiftySingleFamilyRange.HighValue, new { @class = "smallwidth" })<br />
        
        <span class="searchLabel">250 Apts Between:</span> 
        @Html.TextBoxFor(m => m.Filter.TwoFiftyApartmentsRange.LowValue, new { @class = "smallwidth" }) and 
        @Html.TextBoxFor(m => m.Filter.TwoFiftyApartmentsRange.HighValue, new { @class = "smallwidth" })<br />
    </div>
    
    <div style="text-align:center; margin-bottom:10px;">
        <input type="submit" value="Clear Filter" />
        <input type="submit" value="Filter Properties" />
    </div>
    
    <div style="text-align:center; margin-bottom:20px;">
        <input type="submit" value="View Results in Google Maps" />
    </div>
    
    </div>
    </div>


@Html.HiddenFor(m => m.Sort.Column, new { @id = "columnField" })
<table cellspacing="0" align="center" rules="all" border="1" style="border-collapse:collapse;">
    
    <tr align="center" style="background-color: #CCCCCC; border-style: solid;">
    <th scope="col"><a id="cityColumn" href="#">City</a></th>
    <th scope="col"><a href="@Url.Sort(UtahPlanners.MVC3.PropertyService.IndexColumn.Id)">Property Number</a></th>
    <th scope="col"><a href="@Url.Sort(UtahPlanners.MVC3.PropertyService.IndexColumn.Score)">Overall Score</a></th>
    <th scope="col"><a href="@Url.Sort(UtahPlanners.MVC3.PropertyService.IndexColumn.Type)">Type</a></th>
    <th scope="col"><a href="@Url.Sort(UtahPlanners.MVC3.PropertyService.IndexColumn.Density)">Density</a></th>
    <th scope="col"><a href="@Url.Sort(UtahPlanners.MVC3.PropertyService.IndexColumn.Units)">Units</a></th>
    <th scope="col"><a href="@Url.Sort(UtahPlanners.MVC3.PropertyService.IndexColumn.Year)">Year Built</a></th>
    <th scope="col"><a href="@Url.Sort(UtahPlanners.MVC3.PropertyService.IndexColumn.StreetType)">Street Type</a></th>
    <th scope="col"><a href="@Url.Sort(UtahPlanners.MVC3.PropertyService.IndexColumn.Walkability)">Walkability</a></th>
    <th scope="col"><a href="@Url.Sort(UtahPlanners.MVC3.PropertyService.IndexColumn.Walkscore)">Walkscore</a></th>
    <th scope="col"><a href="@Url.Sort(UtahPlanners.MVC3.PropertyService.IndexColumn.SocioEcon)">Socio Econ</a></th>
    <th scope="col"><a href="@Url.Sort(UtahPlanners.MVC3.PropertyService.IndexColumn.TwoFiftySF)">250 Single Fam</a></th>
    </tr>

    @foreach (UtahPlanners.MVC3.Models.Home.Index prop in Model.Records)
    {
        <tr align="center" valign="middle" style="height: 35px;">
        <td>@Html.ActionLink(prop.City, "Property", new { id = prop.Id })</td>
        <td>@prop.Id</td>
        <td>@prop.Score</td>
        <td>@prop.PropertyType</td>
        <td>@prop.Density</td>
        <td>@prop.Units</td>
        <td>@prop.YearBuilt</td>
        <td>@prop.StreetType</td>
        <td>@prop.StreetWalkDescription</td>
        <td>@prop.Walkscore</td>
        <td>@prop.SocioEconDescription</td>
        <td>@prop.TwoFiftySingleFamily</td>
        </tr>
    }

</table>
}