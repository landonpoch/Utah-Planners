@model IndexModel
@{
    Layout = "~/Views/Shared/_LayoutNoLeftNav.cshtml";
}

@section Head
{
<script type="text/javascript" src="http://code.jquery.com/jquery-1.4.2.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $("h2.trigger").click(function (event) {
            event.preventDefault();
            $(this).toggleClass("active").next().slideToggle("slow");
        });

        $('#clearButton').click(function () {
            $('#resetView').val(true);
        });

        $('#indexTable>thead>tr>th a').each(function () {
            $(this).click(function (event) {
                event.preventDefault();
                sort(this);
                $("form").submit();
            });
        });
    });

    function sort(column) {
        var previousSort = $('#columnField').val();
        applySortColumn(column);
        var nextSort = $('#columnField').val();
        applySortDirection(previousSort, nextSort);
    }

    function applySortColumn(column) {
        column = $(column).attr('id');
        $('#columnField').val(column);
    }

    function applySortDirection(previousSort, nextSort) {
        var currentDirection = $('#directionField').val();
        $('#directionField').val('ascending');
        if (previousSort == nextSort && currentDirection == 'ascending') {
            $('#directionField').val('descending');
        }
    }
</script>
}

@using (Html.BeginForm("Index", "Home", FormMethod.Post))
{ 
<h2 class="trigger"><a href="#">Index Filter</a></h2>
<div class="toggle_container" style="display: none;">
    <div class="block">

    <div class="searchLeft">
    <h3 style="margin-left:50px;">Property Details:</h3>
        
    <span class="searchLabel">Property Number:</span>
    @Html.TextBoxFor(m => m.IndexGridModel.Filter.PropertyId, new { @class = "newwidth" })
        
    <span class="searchLabel">City:</span>
    @Html.TextBoxFor(m => m.IndexGridModel.Filter.City, new { @class = "newwidth" })

    <span class="searchLabel">Property Type:</span>
    @Html.DropDownListFor(m => m.IndexGridModel.Filter.PropertyType, Model.DropDowns.PropertyTypes, String.Empty, new { @class = "newwidth" })<br />
        
    <span class="searchLabel">Density Between:</span>
    @Html.TextBoxFor(m => m.IndexGridModel.Filter.DensityRange.LowValue, new { @class = "smallwidth" }) and 
    @Html.TextBoxFor(m => m.IndexGridModel.Filter.DensityRange.HighValue, new { @class = "smallwidth" })<br />
        
    <span class="searchLabel">Area Between:</span>
    @Html.TextBoxFor(m => m.IndexGridModel.Filter.AreaRange.LowValue, new { @class = "smallwidth" }) and 
    @Html.TextBoxFor(m => m.IndexGridModel.Filter.AreaRange.HighValue, new { @class = "smallwidth" })<br />
        
    <span class="searchLabel">Units Between:</span>
    @Html.TextBoxFor(m => m.IndexGridModel.Filter.UnitRange.LowValue, new { @class = "smallwidth" }) and 
    @Html.TextBoxFor(m => m.IndexGridModel.Filter.UnitRange.HighValue, new { @class = "smallwidth" })<br />
        
    <span class="searchLabel">Street Type:</span>
    @Html.DropDownListFor(m => m.IndexGridModel.Filter.StreetType, Model.DropDowns.StreetTypes, String.Empty, new { @class = "newwidth" })<br />
        
    <span class="searchLabel">Year Built Between:</span>
    @Html.TextBoxFor(m => m.IndexGridModel.Filter.YearBuiltRange.LowValue, new { @class = "smallwidth" }) and 
    @Html.TextBoxFor(m => m.IndexGridModel.Filter.YearBuiltRange.HighValue, new { @class = "smallwidth" })<br />
        
    <span class="searchLabel">Socio Econ:</span>
    @Html.DropDownListFor(m => m.IndexGridModel.Filter.SocioEconType, Model.DropDowns.SocioEconCodes, String.Empty, new { @class = "newwidth" })<br />
    </div>
    
    <div class="searchRight">
    <h3>Rating Details:</h3>
    <span class="searchLabel">Overall Score Between:</span> 
    @Html.TextBoxFor(m => m.IndexGridModel.Filter.ScoreRange.LowValue, new { @class = "smallwidth" }) and 
    @Html.TextBoxFor(m => m.IndexGridModel.Filter.ScoreRange.HighValue, new { @class = "smallwidth" })<br />
        
    <span class="searchLabel">Street Safety:</span> 
    @Html.DropDownListFor(m => m.IndexGridModel.Filter.StreetSafetyType, Model.DropDowns.StreetSafetyCodes, String.Empty, new { @class = "newwidth" })<br />
        
    <span class="searchLabel">Building Enclosure:</span> 
    @Html.DropDownListFor(m => m.IndexGridModel.Filter.BuildingEnclosureType, Model.DropDowns.EnclosureCodes, String.Empty, new { @class = "newwidth" })<br />
        
    <span class="searchLabel">Common Areas:</span> 
    @Html.DropDownListFor(m => m.IndexGridModel.Filter.CommonAreasType, Model.DropDowns.CommonCodes, String.Empty, new { @class = "newwidth" })<br />
        
    <span class="searchLabel">Street Connectivity:</span> 
    @Html.DropDownListFor(m => m.IndexGridModel.Filter.StreetConnectivityType, Model.DropDowns.StreetconnCodes, String.Empty, new { @class = "newwidth" })<br />
        
    <span class="searchLabel">Street Walkability:</span> 
    @Html.DropDownListFor(m => m.IndexGridModel.Filter.StreetWalkabilityType, Model.DropDowns.StreetwalkCodes, String.Empty, new { @class = "newwidth" })<br />
        
    <span class="searchLabel">Walkscore Between:</span> 
    @Html.TextBoxFor(m => m.IndexGridModel.Filter.WalkscoreRange.LowValue, new { @class = "smallwidth" }) and 
    @Html.TextBoxFor(m => m.IndexGridModel.Filter.WalkscoreRange.HighValue, new { @class = "smallwidth" })<br />
        
    <span class="searchLabel">Neighborhood Condition:</span> 
    @Html.DropDownListFor(m => m.IndexGridModel.Filter.NeighborhoodConditionType, Model.DropDowns.NeighborhoodCodes, String.Empty, new { @class = "newwidth" })<br />
        
    <span class="searchLabel">250 SF Between:</span> 
    @Html.TextBoxFor(m => m.IndexGridModel.Filter.TwoFiftySingleFamilyRange.LowValue, new { @class = "smallwidth" }) and 
    @Html.TextBoxFor(m => m.IndexGridModel.Filter.TwoFiftySingleFamilyRange.HighValue, new { @class = "smallwidth" })<br />
        
    <span class="searchLabel">250 Apts Between:</span> 
    @Html.TextBoxFor(m => m.IndexGridModel.Filter.TwoFiftyApartmentsRange.LowValue, new { @class = "smallwidth" }) and 
    @Html.TextBoxFor(m => m.IndexGridModel.Filter.TwoFiftyApartmentsRange.HighValue, new { @class = "smallwidth" })<br />
    </div>
    
    <div style="text-align:center; margin-bottom:10px;">
        <input id="clearButton" type="submit" value="Clear Filter" />
        <input type="submit" value="Filter Properties" />
    </div>
    
    <div style="text-align:center; margin-bottom:20px;">
        <input type="submit" value="View Results in Google Maps" />
    </div>
    
    </div>
</div>
@Html.HiddenFor(m => m.PropType)
@Html.HiddenFor(m => m.Density)
@Html.HiddenFor(m => m.Walkscore)
@Html.HiddenFor(m => m.ResetView, new { @id = "resetView" })

<div id="indexTable" style="width: 100%;">
    @Html.Partial("_IndexGrid", Model.IndexGridModel)
</div>
}
