@model IndexModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutNoLeftNav.cshtml";
}

@section Head
{
<script type="text/javascript" src="http://code.jquery.com/jquery-1.4.2.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $("h2.trigger").click(function (event) {
            event.preventDefault();
            $(this).toggleClass("active").next().slideToggle("slow");
        });

        $('#indexTable>thead>tr>th a').each(function () {
            $(this).click(function (event) {
                event.preventDefault();
                sort(this);
                $("form").submit();
            });
        });
    });

    function sort(column) {
        var previousSort = $('#columnField').val();
        applySortColumn(column);
        var nextSort = $('#columnField').val();
        applySortDirection(previousSort, nextSort);
    }

    function applySortColumn(column) {
        column = $(column).attr('id');
        $('#columnField').val(column);
    }

    function applySortDirection(previousSort, nextSort) {
        var currentDirection = $('#directionField').val();
        $('#directionField').val('ascending');
        if (previousSort == nextSort && currentDirection == 'ascending') {
            $('#directionField').val('descending');
        }
    }
</script>
}

@using (Html.BeginForm("Index", "Home", FormMethod.Post))
{ 
<h2 class="trigger"><a href="#">Index Filter</a></h2>
<div class="toggle_container" style="display: none;">
    <div class="block">
    

    <div class="searchLeft">
        <h3 style="margin-left:50px;">Property Details:</h3>
        
        <span class="searchLabel">Property Number:</span>
        @Html.TextBoxFor(m => m.Filter.PropertyId, new { @class = "newwidth" })
        
        <span class="searchLabel">City:</span>
        @Html.TextBoxFor(m => m.Filter.City, new { @class = "newwidth" })

        <span class="searchLabel">Property Type:</span>
        @Html.DropDownListFor(m => m.Filter.PropertyType, 
            new SelectList(Model.DropDowns.PropertyTypes, 
            "Id", 
            "Value", 
            Model.DropDowns.PropertyTypes.First().Id) , 
            new { @class = "newwidth" })<br />
        
        <span class="searchLabel">Density Between:</span>
        @Html.TextBoxFor(m => m.Filter.DensityRange.LowValue, new { @class = "smallwidth" }) and 
        @Html.TextBoxFor(m => m.Filter.DensityRange.HighValue, new { @class = "smallwidth" })<br />
        
        <span class="searchLabel">Area Between:</span>
        @Html.TextBoxFor(m => m.Filter.AreaRange.LowValue, new { @class = "smallwidth" }) and 
        @Html.TextBoxFor(m => m.Filter.AreaRange.HighValue, new { @class = "smallwidth" })<br />
        
        <span class="searchLabel">Units Between:</span>
        @Html.TextBoxFor(m => m.Filter.UnitRange.LowValue, new { @class = "smallwidth" }) and 
        @Html.TextBoxFor(m => m.Filter.UnitRange.HighValue, new { @class = "smallwidth" })<br />
        
        <span class="searchLabel">Street Type:</span>
        @Html.DropDownListFor(m => m.Filter.StreetType,
            new SelectList(Model.DropDowns.StreetTypes,
            "Id",
            "Value",
            Model.DropDowns.StreetTypes.First().Id) ,
            new { @class = "newwidth" })<br />
        
        <span class="searchLabel">Year Built Between:</span>
        @Html.TextBoxFor(m => m.Filter.YearBuiltRange.LowValue, new { @class = "smallwidth" }) and 
        @Html.TextBoxFor(m => m.Filter.YearBuiltRange.HighValue, new { @class = "smallwidth" })<br />
        
        <span class="searchLabel">Socio Econ:</span>
        @Html.DropDownListFor(m => m.Filter.SocioEconType,
            new SelectList(Model.DropDowns.SocioEconCodes,
            "Id",
            "Value",
            Model.DropDowns.SocioEconCodes.First().Id),
            new { @class = "newwidth" })<br />
    </div>
    
    <div class="searchRight">
        <h3>Rating Details:</h3>
        <span class="searchLabel">Overall Score Between:</span> 
        @Html.TextBoxFor(m => m.Filter.ScoreRange.LowValue, new { @class = "smallwidth" }) and 
        @Html.TextBoxFor(m => m.Filter.ScoreRange.HighValue, new { @class = "smallwidth" })<br />
        
        <span class="searchLabel">Street Safety:</span> 
        @Html.DropDownListFor(m => m.Filter.StreetSafetyType,
            new SelectList(Model.DropDowns.StreetSafetyCodes,
            "Id",
            "Value",
            Model.DropDowns.StreetSafetyCodes.First().Id),
            new { @class = "newwidth" })<br />
        
        <span class="searchLabel">Building Enclosure:</span> 
        @Html.DropDownListFor(m => m.Filter.BuildingEnclosureType,
            new SelectList(Model.DropDowns.EnclosureCodes,
            "Id",
            "Value",
            Model.DropDowns.EnclosureCodes.First().Id),
            new { @class = "newwidth" })<br />
        
        <span class="searchLabel">Common Areas:</span> 
        @Html.DropDownListFor(m => m.Filter.CommonAreasType,
            new SelectList(Model.DropDowns.CommonCodes,
            "Id",
            "Value",
            Model.DropDowns.CommonCodes.First().Id),
            new { @class = "newwidth" })<br />
        
        <span class="searchLabel">Street Connectivity:</span> 
        @Html.DropDownListFor(m => m.Filter.StreetConnectivityType,
            new SelectList(Model.DropDowns.StreetconnCodes,
            "Id",
            "Value",
            Model.DropDowns.StreetconnCodes.First().Id),
            new { @class = "newwidth" })<br />
        
        <span class="searchLabel">Street Walkability:</span> 
        @Html.DropDownListFor(m => m.Filter.StreetWalkabilityType,
            new SelectList(Model.DropDowns.StreetwalkCodes,
            "Id",
            "Value",
            Model.DropDowns.StreetwalkCodes.First().Id),
            new { @class = "newwidth" })<br />
        
        <span class="searchLabel">Walkscore Between:</span> 
        @Html.TextBoxFor(m => m.Filter.WalkscoreRange.LowValue, new { @class = "smallwidth" }) and 
        @Html.TextBoxFor(m => m.Filter.WalkscoreRange.HighValue, new { @class = "smallwidth" })<br />
        
        <span class="searchLabel">Neighborhood Condition:</span> 
        @Html.DropDownListFor(m => m.Filter.NeighborhoodConditionType,
            new SelectList(Model.DropDowns.NeighborhoodCodes,
            "Id",
            "Value",
            Model.DropDowns.NeighborhoodCodes.First().Id),
            new { @class = "newwidth" })<br />
        
        <span class="searchLabel">250 SF Between:</span> 
        @Html.TextBoxFor(m => m.Filter.TwoFiftySingleFamilyRange.LowValue, new { @class = "smallwidth" }) and 
        @Html.TextBoxFor(m => m.Filter.TwoFiftySingleFamilyRange.HighValue, new { @class = "smallwidth" })<br />
        
        <span class="searchLabel">250 Apts Between:</span> 
        @Html.TextBoxFor(m => m.Filter.TwoFiftyApartmentsRange.LowValue, new { @class = "smallwidth" }) and 
        @Html.TextBoxFor(m => m.Filter.TwoFiftyApartmentsRange.HighValue, new { @class = "smallwidth" })<br />
    </div>
    
    <div style="text-align:center; margin-bottom:10px;">
        <input type="submit" value="Clear Filter" />
        <input type="submit" value="Filter Properties" />
    </div>
    
    <div style="text-align:center; margin-bottom:20px;">
        <input type="submit" value="View Results in Google Maps" />
    </div>
    
    </div>
    </div>


@Html.HiddenFor(m => m.Sort.Column, new { @id = "columnField" })
@Html.HiddenFor(m => m.Sort.Direction, new { @id = "directionField" })
<table id="indexTable" cellspacing="0" align="center" rules="all" border="1" style="border-collapse:collapse;">
    <thead>
    <tr align="center" style="background-color: #CCCCCC; border-style: solid;">
    <th scope="col"><a id="city" href="#">City</a></th>
    <th scope="col"><a id="id" href="#">Property Number</a></th>
    <th scope="col"><a id="score" href="#">Overall Score</a></th>
    <th scope="col"><a id="type" href="#">Type</a></th>
    <th scope="col"><a id="density" href="#">Density</a></th>
    <th scope="col"><a id="units" href="#">Units</a></th>
    <th scope="col"><a id="year" href="#">Year Built</a></th>
    <th scope="col"><a id="streetType" href="#">Street Type</a></th>
    <th scope="col"><a id="walkability" href="#">Walkability</a></th>
    <th scope="col"><a id="walkscore" href="#">Walkscore</a></th>
    <th scope="col"><a id="socioEcon" href="#">Socio Econ</a></th>
    <th scope="col"><a id="twoFiftySF" href="#">250 Single Fam</a></th>
    </tr>
    </thead>

    <tbody>
    @foreach (UtahPlanners.MVC3.Models.Home.Index prop in Model.Records)
    {
        <tr align="center" valign="middle" style="height: 35px;">
        <td>@Html.ActionLink(prop.City, "Property", new { id = prop.Id })</td>
        <td>@prop.Id</td>
        <td>@prop.Score</td>
        <td>@prop.PropertyType</td>
        <td>@prop.Density</td>
        <td>@prop.Units</td>
        <td>@prop.YearBuilt</td>
        <td>@prop.StreetType</td>
        <td>@prop.StreetWalkDescription</td>
        <td>@prop.Walkscore</td>
        <td>@prop.SocioEconDescription</td>
        <td>@prop.TwoFiftySingleFamily</td>
        </tr>
    }
    </tbody>

</table>
}